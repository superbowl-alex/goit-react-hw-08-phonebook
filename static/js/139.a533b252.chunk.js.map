{"version":3,"file":"static/js/139.a533b252.chunk.js","mappings":"kUAUIA,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,KAAMF,EAAAA,GACI,oBACPG,IAAI,EAAG,4CACPC,IAAI,GAAI,6CACRC,SAAS,oBACZC,MAAON,EAAAA,GACG,oBACPM,MAAM,uBACND,SAAS,qBACZE,SAAUP,EAAAA,GACA,uBACPG,IAAI,EAAG,qDACPE,SAAS,0BAqFd,EAlFqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAOC,EAAP,mFAAiBC,EAAjB,EAAiBA,UAAjB,SACKJ,GACtBK,EAAAA,EAAAA,IAAS,CACPX,KAAMS,EAAOT,KAAKY,OAClBR,MAAOK,EAAOL,MAAMQ,OACpBP,SAAUI,EAAOJ,SAASO,UALX,qBACXC,MADW,uBASjBH,IACAI,EAAAA,GAAAA,QAAA,mCAAkDC,EAAAA,GAVjC,0BAanBD,EAAAA,GAAAA,MAAA,mEAEEC,EAAAA,GAfiB,4CAAH,wDAmBZC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACblB,KAAM,GACNI,MAAO,GACPC,SAAU,IAEZc,iBAAkBtB,EAClBuB,SAAUZ,IAGZ,OACE,UAACa,EAAA,EAAD,CACEC,UAAU,OACVF,SAAUJ,EAAOR,aACjBe,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,MAAO,IACP,kBAAmB,CAAEC,EAAG,MAR5B,WAWE,SAACC,EAAA,EAAD,CACEC,GAAG,OACH9B,KAAK,OACL+B,MAAM,OACNC,aAAa,MACbC,MAAOjB,EAAOP,OAAOT,KACrBkC,SAAUlB,EAAOmB,aACjBtB,MAAOG,EAAOoB,QAAQpC,MAAQqC,QAAQrB,EAAOsB,OAAOtC,MACpDuC,WAAYvB,EAAOoB,QAAQpC,MAAQgB,EAAOsB,OAAOtC,QAEnD,SAAC6B,EAAA,EAAD,CACEC,GAAG,QACH9B,KAAK,QACL+B,MAAM,QACNC,aAAa,MACbC,MAAOjB,EAAOP,OAAOL,MACrB8B,SAAUlB,EAAOmB,aACjBtB,MAAOG,EAAOoB,QAAQhC,OAASiC,QAAQrB,EAAOsB,OAAOlC,OACrDmC,WAAYvB,EAAOoB,QAAQhC,OAASY,EAAOsB,OAAOlC,SAEpD,SAACyB,EAAA,EAAD,CACEC,GAAG,WACH9B,KAAK,WACL+B,MAAM,WACNS,KAAK,WACLR,aAAa,MACbC,MAAOjB,EAAOP,OAAOJ,SACrB6B,SAAUlB,EAAOmB,aACjBtB,MAAOG,EAAOoB,QAAQ/B,UAAYgC,QAAQrB,EAAOsB,OAAOjC,UACxDkC,WAAYvB,EAAOoB,QAAQ/B,UAAYW,EAAOsB,OAAOjC,YAEvD,SAACoC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYH,KAAK,SAAjD,sBAKL,EC3FD,EAXiB,WACf,OACE,UAACnB,EAAA,EAAD,CAAKE,GAAI,CAAEI,MAAO,QAAlB,WACE,SAACiB,EAAA,EAAD,WACE,+CAEF,SAAC,EAAD,MAGL,C,uDCbM,IAAM7B,EAAe,CAC1B8B,SAAU,YACVC,UAAW,KACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,E","sources":["components/RegisterForm/RegisterForm.js","pages/Register.js","utils/toastOptions.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { register } from 'redux/auth/operations';\nimport { toastOptions } from 'utils/toastOptions';\nimport { toast } from 'react-toastify';\n\nlet schema = yup.object().shape({\n  name: yup\n    .string('Enter your email')\n    .min(3, 'Name must be at least 3 characters long!')\n    .max(32, 'Name must be less than 32 characters long')\n    .required('Name is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(7, 'Password should be of minimum 7 characters length')\n    .required('Password is required'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const { error } = await dispatch(\n      register({\n        name: values.name.trim(),\n        email: values.email.trim(),\n        password: values.password.trim(),\n      })\n    );\n    if (!error) {\n      resetForm();\n      toast.success(`You have successfully registered`, toastOptions);\n      return;\n    }\n    toast.error(\n      `An error has occurred, please check the information you entered.`,\n      toastOptions\n    );\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={formik.handleSubmit}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: 400,\n        '& > :not(style)': { m: 1.5 },\n      }}\n    >\n      <TextField\n        id=\"name\"\n        name=\"name\"\n        label=\"Name\"\n        autoComplete=\"off\"\n        value={formik.values.name}\n        onChange={formik.handleChange}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n      />\n      <TextField\n        id=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        autoComplete=\"off\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n      <TextField\n        id=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        autoComplete=\"off\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n      />\n      <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n        Log in\n      </Button>\n    </Box>\n  );\n};\n\nexport default RegisterForm;\n","import { Helmet } from 'react-helmet';\nimport Box from '@mui/material/Box';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </Box>\n  );\n};\n\nexport default Register;\n","export const toastOptions = {\n  position: 'top-right',\n  autoClose: 1500,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n"],"names":["schema","yup","shape","name","min","max","required","email","password","dispatch","useDispatch","handleSubmit","values","resetForm","register","trim","error","toast","toastOptions","formik","useFormik","initialValues","validationSchema","onSubmit","Box","component","sx","display","flexDirection","alignItems","width","m","TextField","id","label","autoComplete","value","onChange","handleChange","touched","Boolean","errors","helperText","type","Button","color","variant","Helmet","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"sourceRoot":""}