{"version":3,"file":"static/js/953.123a17ac.chunk.js","mappings":"iRAQIA,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,MAAOF,EAAAA,GACG,oBACPE,MAAM,uBACNC,SAAS,qBACZC,SAAUJ,EAAAA,GACA,uBACPK,IAAI,EAAG,qDACPF,SAAS,0BAiEd,EA9DkB,WAChB,IAAMG,GAAWC,EAAAA,EAAAA,MAYXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbR,MAAO,GACPE,SAAU,IAEZO,iBAAkBZ,EAClBa,SAhBmB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BR,GACES,EAAAA,EAAAA,IAAM,CACJb,MAAOW,EAAOX,MAAMc,OACpBZ,SAAUS,EAAOT,SAASY,UAG9BF,GACD,IAWD,OACE,UAACG,EAAA,EAAD,CACEC,UAAU,OACVN,SAAUJ,EAAOW,aACjBC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,MAAO,IACP,kBAAmB,CAAEC,EAAG,MAR5B,WAWE,SAACC,EAAA,EAAD,CACEC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,aAAa,MACbC,MAAOvB,EAAOK,OAAOX,MACrB8B,SAAUxB,EAAOyB,aACjBC,MAAO1B,EAAO2B,QAAQjC,OAASkC,QAAQ5B,EAAO6B,OAAOnC,OACrDoC,WAAY9B,EAAO2B,QAAQjC,OAASM,EAAO6B,OAAOnC,SAEpD,SAACwB,EAAA,EAAD,CACEC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNU,KAAK,WACLT,aAAa,MACbC,MAAOvB,EAAOK,OAAOT,SACrB4B,SAAUxB,EAAOyB,aACjBC,MAAO1B,EAAO2B,QAAQ/B,UAAYgC,QAAQ5B,EAAO6B,OAAOjC,UACxDkC,WAAY9B,EAAO2B,QAAQ/B,UAAYI,EAAO6B,OAAOjC,YAEvD,SAACoC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYH,KAAK,SAAjD,sBAKL,EChED,EAXc,WACZ,OACE,UAACtB,EAAA,EAAD,CAAKG,GAAI,CAAEI,MAAO,QAAlB,WACE,SAACmB,EAAA,EAAD,WACE,wCAEF,SAAC,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.js","pages/Login/Login.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { logIn } from 'redux/auth/operations';\n\nlet schema = yup.object().shape({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(7, 'Password should be of minimum 7 characters length')\n    .required('Password is required'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      logIn({\n        email: values.email.trim(),\n        password: values.password.trim(),\n      })\n    );\n    resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={formik.handleSubmit}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: 400,\n        '& > :not(style)': { m: 1.5 },\n      }}\n    >\n      <TextField\n        id=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        autoComplete=\"off\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n      <TextField\n        id=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        autoComplete=\"off\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n      />\n      <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n        Log in\n      </Button>\n    </Box>\n  );\n};\n\nexport default LoginForm;\n","import { Helmet } from 'react-helmet';\nimport Box from '@mui/material/Box';\nimport LoginForm from '../../components/LoginForm';\n\nconst Login = () => {\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </Box>\n  );\n};\n\nexport default Login;\n"],"names":["schema","yup","shape","email","required","password","min","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","logIn","trim","Box","component","handleSubmit","sx","display","flexDirection","alignItems","width","m","TextField","id","name","label","autoComplete","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","color","variant","Helmet"],"sourceRoot":""}