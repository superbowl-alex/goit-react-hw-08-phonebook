{"version":3,"file":"static/js/57.f62cc7e8.chunk.js","mappings":"kPAKIA,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,0BACpDC,SAAUJ,EAAAA,KAEPK,IAAI,EAAG,gDACPC,IAAI,GAAI,kDACRH,SAAS,4BAGRI,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNC,OAAQ,SAAAC,GACN,OAAO,yBAAMA,GACd,GAGN,EA2CD,EAzCkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MAajB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEX,MAAO,GAAIE,SAAU,IACtCU,iBAAkBf,EAClBgB,SAfiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACtBf,EAAoBc,EAApBd,MAAOE,EAAaY,EAAbZ,SACfO,GACEO,EAAAA,EAAAA,IAAM,CACJhB,MAAAA,EACAE,SAAAA,KAGJa,GACD,EAGC,UAKE,UAAC,KAAD,YACE,sCAEE,4BACE,SAAC,KAAD,CAAOE,KAAK,QAAQX,KAAK,QAAQY,aAAa,SAC9C,SAACb,EAAD,CAAWC,KAAK,iBAGpB,yCAEE,4BACE,SAAC,KAAD,CAAOW,KAAK,WAAWX,KAAK,WAAWY,aAAa,SACpD,SAACb,EAAD,CAAWC,KAAK,oBAGpB,mBAAQW,KAAK,SAAb,wBAIP,EClDD,EAXc,WACZ,OACE,4BACE,SAACE,EAAA,EAAD,WACE,wCAEF,SAAC,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.js","pages/Login/Login.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage, Form, Field } from 'formik';\nimport * as yup from 'yup';\nimport { logIn } from 'redux/auth/operations';\n\nlet schema = yup.object().shape({\n  email: yup.string().email('Invalid email').required('This field is required'),\n  password: yup\n    .string()\n    .min(4, 'Password must be at least 4 characters long!')\n    .max(16, 'Password must be less than 16 characters long!')\n    .required('This field is required'),\n});\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => {\n        return <div>{message}</div>;\n      }}\n    />\n  );\n};\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { email, password } = values;\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <label>\n          Email\n          <div>\n            <Field type=\"email\" name=\"email\" autoComplete=\"off\" />\n            <FormError name=\"email\" />\n          </div>\n        </label>\n        <label>\n          Password\n          <div>\n            <Field type=\"password\" name=\"password\" autoComplete=\"off\" />\n            <FormError name=\"password\" />\n          </div>\n        </label>\n        <button type=\"submit\">Log in</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import { Helmet } from 'react-helmet';\nimport LoginForm from '../../components/LoginForm';\n\nconst Login = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["schema","yup","shape","email","required","password","min","max","FormError","name","render","message","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","logIn","type","autoComplete","Helmet"],"sourceRoot":""}